{"version":3,"sources":["sample-restaurants.js","components/Landing.js","components/Header.js","components/AddBurgerForm.js","components/EditBurgerForm.js","components/MenuAdmin.js","components/Shipment.js","components/Order.js","components/Burger.js","sample-burgers.js","base.js","components/Auth/Login.js","components/Auth/SignIn.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["restaurants","title","url","id","Landing","props","useState","display","tooggleDisplay","setTitle","setUrl","Fragment","className","onClick","map","restaurant","getTitle","key","history","push","Header","AddBurgerForm","nameRef","React","createRef","priceRef","statusRef","descRef","imageRef","createBurger","event","preventDefault","burger","name","current","value","price","parseFloat","status","desc","image","addBurger","currentTarget","reset","onSubmit","this","ref","type","placeholder","autoComplete","Component","EditBurgerForm","handleChange","console","log","updatedBurger","onChange","deleteBurger","index","MenuAdmin","Object","keys","burgers","updateBurger","loadSampleBurgers","Shipment","total","shipping","shippingNeon","Order","renderOrder","count","order","isAvailable","CSSTransition","classNames","timeout","enter","exit","deleteFromOrder","orderIds","reduce","prevTotal","TransitionGroup","component","Burger","details","src","alt","disabled","addToOrder","sampleBurgers","burger1","burger2","burger3","burger4","burger5","burger6","burger7","burger8","burger9","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Login","authenticate","SignIn","state","user","authHandler","authData","a","email","setState","authProvider","auth","signInWithPopup","then","children","App","Date","now","params","match","localStorageRef","localStorage","getItem","restaurantId","JSON","parse","syncState","context","setItem","stringify","removeBinding","NotFound","Router","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.1ad2d940.chunk.js","sourcesContent":["// Наши рестораны\r\nconst restaurants = [\r\n  {\r\n    title: 'Hot Burger Тверская',\r\n    url: 'hot-burger-tverskaya',\r\n    id: 1\r\n  },\r\n\r\n  {\r\n    title: 'Hot Burger Маросейка',\r\n    url: 'hot-burger-maroseyka',\r\n    id: 2\r\n  },\r\n  {\r\n    title: 'Hot Burger Петровка',\r\n    url: 'hot-burger-petrovka',\r\n    id: 3\r\n  }\r\n];\r\n\r\nexport default restaurants;\r\n","import React, {useState} from 'react';\r\nimport restaurants from '../sample-restaurants';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Landing = (props) => {\r\n\r\n    const [display,\r\n        tooggleDisplay] = useState(false);\r\n\r\n    const [title,\r\n        setTitle] = useState('');\r\n\r\n    const [url,\r\n        setUrl] = useState('');\r\n\r\n    const dsiplayList = () => {\r\n        tooggleDisplay(!display);\r\n    };\r\n\r\n    const getTitle = restaurant => {\r\n        const {title, url} = restaurant;\r\n        // this.setState({title, url});\r\n        setTitle(title);\r\n        setUrl(url);\r\n        tooggleDisplay(false);\r\n    };\r\n\r\n    const goToRestaurant = () => {\r\n        props\r\n            .history\r\n            .push(`/restaurant/${url}`);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className='restaurant_select'>\r\n                <div className='restaurant_select_top'>\r\n                    <div\r\n                        onClick={dsiplayList}\r\n                        className='restaurant_select_top-header font-effect-outline'>{title\r\n                            ? title\r\n                            : 'Выбери ресторан'}</div>\r\n                    <div className=\"arrow_picker\">\r\n                        <div className=\"arrow_picker-up\"></div>\r\n                        <div className=\"arrow_picker-down\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n                {display\r\n                    ? <div className=\"restaurant_select_bottom\">\r\n                            <ul>\r\n                                {restaurants.map(restaurant => {\r\n                                    return <li onClick={() => getTitle(restaurant)} key={restaurant.id}>{restaurant.title}</li>\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    : null}\r\n\r\n                {title && !display\r\n                    ? <button onClick={goToRestaurant}>Перейти в ресторан</button>\r\n                    : null}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nLanding.propTypes = {\r\n    history: PropTypes.object\r\n};\r\n\r\nexport default Landing;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = props => {\r\n    return (\r\n        <header className=\"top\">\r\n            <div className=\"wrap\">\r\n                <div className=\"header-content\">\r\n                    <div className=\"header-rating\">\r\n                        <div className=\"header-rating_tag\">Рейтинг</div>\r\n                        <div className=\"header-rating_icon\">★★★★★</div>\r\n                    </div>\r\n\r\n                    <div className=\"header-divider\"></div>\r\n                    <h1 className=\"font-effect-fire-animation\">{props.title}\r\n                    </h1>\r\n                    <h3 className>\r\n                        <span>\r\n                            Быстрая доставка горячих\r\n                            <span className='sub-header'>\r\n                                #бургеров</span>\r\n                        </span>\r\n                    </h3>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddBurgerForm extends React.Component {\r\n\r\n    static propTypes = {\r\n        addBurger: PropTypes.func\r\n    };\r\n\r\n    nameRef = React.createRef();\r\n    priceRef = React.createRef();\r\n    statusRef = React.createRef();\r\n    descRef = React.createRef();\r\n    imageRef = React.createRef();\r\n\r\n    createBurger = (event) => {\r\n        event.preventDefault();\r\n        const burger = {\r\n            name: this.nameRef.current.value,\r\n            price: parseFloat(this.priceRef.current.value || 0),\r\n            status: this.statusRef.current.value,\r\n            desc: this.descRef.current.value,\r\n            image: this.imageRef.current.value\r\n        };\r\n        this\r\n            .props\r\n            .addBurger(burger);\r\n        event\r\n            .currentTarget\r\n            .reset();\r\n    }\r\n    render() {\r\n        return (\r\n            <form className=\"burger-edit\" onSubmit={this.createBurger}>\r\n                <input\r\n                    ref={this.nameRef}\r\n                    type=\"text\"\r\n                    name=' name'\r\n                    placeholder='Name'\r\n                    autoComplete='off'/>\r\n                <input\r\n                    ref={this.priceRef}\r\n                    type=\"text\"\r\n                    name='price'\r\n                    placeholder='Price'\r\n                    autoComplete='off'/>\r\n                <select ref={this.statusRef} name='status' className='status'>\r\n                    <option value=\"available\">Доступно</option>\r\n                    <option value=\"unavailble\">Убрать из меню</option>\r\n                </select>\r\n                <textarea ref={this.descRef} name='desc' placeholder='Desc'/>\r\n                <input\r\n                    ref={this.imageRef}\r\n                    type=\"text\"\r\n                    name='image'\r\n                    placeholder='Image'\r\n                    autoComplete='off'/>\r\n                <button type=\"submit\">+ Добавить в Меню</button>\r\n            </form>\r\n        )\r\n    }\r\n};\r\n\r\nexport default AddBurgerForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass EditBurgerForm extends React.Component {\r\n\r\n    static propTypes = {\r\n        burger: PropTypes.shape({image: PropTypes.string, name: PropTypes.string, price: PropTypes.number, desc: PropTypes.string, status: PropTypes.string}),\r\n        index: PropTypes.string,\r\n        updateBurger: PropTypes.func,\r\n        deleteBurger: PropTypes.func\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        console.log(event.currentTarget.value);\r\n\r\n        const updatedBurger = {\r\n            ...this.props.burger,\r\n            [event.currentTarget.name]: event.currentTarget.name === 'price'\r\n                ? parseFloat(event.currentTarget.value) || 0\r\n                : event.currentTarget.value\r\n        };\r\n\r\n        this\r\n            .props\r\n            .updatedBurger(updatedBurger);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"burger-edit\">\r\n                <input\r\n                    onChange={this.handleChange}\r\n                    name='name'\r\n                    type='text'\r\n                    value={this.props.burger.name}/>\r\n                <input\r\n                    onChange={this.handleChange}\r\n                    name='price'\r\n                    type='text'\r\n                    value={this.props.burger.price}/>\r\n                <select\r\n                    onChange={this.handleChange}\r\n                    name='status'\r\n                    className='status'\r\n                    value={this.props.burger.status}>\r\n                    <option value=\"available\">Доступно!</option>\r\n                    <option value=\"unavialable\">Не доступно!</option>\r\n                </select>\r\n                <textarea\r\n                    onChange={this.handleChange}\r\n                    name='desc'\r\n                    value={this.props.burger.desc}/>\r\n                <input\r\n                    onChange={this.handleChange}\r\n                    name='image'\r\n                    type='text'\r\n                    value={this.props.burger.image}/>\r\n                <button onClick={() => this.props.deleteBurger(this.props.index)}>Удалить из меню</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default EditBurgerForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AddBurgerForm from './AddBurgerForm';\r\nimport EditBurgerForm from './EditBurgerForm';\r\n\r\nclass MenuAdmin extends React.Component {\r\n\r\n    static propTypes = {\r\n        burgers: PropTypes.object,\r\n        deleteBurger: PropTypes.func,\r\n        updateBurger: PropTypes.func,\r\n        addBurger: PropTypes.func,\r\n        loadSampleBurgers: PropTypes.func\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"menu-admin\">\r\n                <h2>Управление Меню</h2>\r\n                {Object\r\n                    .keys(this.props.burgers)\r\n                    .map(key => {\r\n                        return <EditBurgerForm\r\n                            index={key}\r\n                            key={key}\r\n                            deleteBurger={this.props.deleteBurger}\r\n                            burger={this.props.burgers[key]}\r\n                            updateBurger={this.props.updateBurger}/>\r\n                    })}\r\n                <AddBurgerForm addBurger={this.props.addBurger}/>\r\n                <button onClick={this.props.loadSampleBurgers}>Загрузить бургеры</button>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default MenuAdmin;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Shipment extends React.Component {\r\n\r\n    static propTypes = {\r\n        total: PropTypes.number\r\n    }\r\n\r\n    render() {\r\n        const {total} = this.props;\r\n        const shipping = total > 0 && total < 500\r\n            ? 350\r\n            : 99;\r\n        const shippingNeon = shipping === 99\r\n            ? (\r\n                <span className=\"font-effect-neon total_wrap-cheap\">\r\n                    {shipping}\r\n                    ₸\r\n                </span>\r\n            )\r\n            : (\r\n                <span>\r\n                    {shipping}\r\n                    ₸</span>\r\n            );\r\n        return (\r\n            <div className=\"total\">\r\n                <div className=\"total_wrap\">\r\n                    <div>\r\n                        <div>\r\n                            Доставка: {total > 0\r\n                                ? shippingNeon\r\n                                : null}\r\n                        </div>\r\n                        <div className='total_wrap-free'>\r\n                            {total < 500\r\n                                ? `Закажите еще на ${ 500 - total} ₸ для доставка за 99 ₸`\r\n                                : null}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"total_wrap-final\">\r\n                        Итого: {total}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Shipment;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Shipment from './Shipment';\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\r\n\r\nclass Order extends React.Component {\r\n\r\n    static propTypes = {\r\n        burgers: PropTypes.object,\r\n        order: PropTypes.object,\r\n        deleteFromOrder: PropTypes.func\r\n    };\r\n\r\n    renderOrder = (key) => {\r\n        const burger = this.props.burgers[key];\r\n        const count = this.props.order[key];\r\n        const isAvailable = burger && burger.status === 'available';\r\n\r\n        if (!burger) \r\n            return null;\r\n        \r\n        if (!isAvailable) {\r\n            return (\r\n                <CSSTransition\r\n                    classNames='order'\r\n                    key={key}\r\n                    timeout={{\r\n                    enter: 5000,\r\n                    exit: 5000\r\n                }}>\r\n\r\n                    <li className=\"unavailable\" key={key}>\r\n                        Извините, {burger\r\n                            ? burger.name\r\n                            : 'бургер'}\r\n                        временно недоступен\r\n                    </li>\r\n\r\n                </CSSTransition>\r\n            );\r\n        }\r\n\r\n        return <CSSTransition\r\n            classNames='order'\r\n            key={key}\r\n            timeout={{\r\n            enter: 5000,\r\n            exit: 5000\r\n        }}>\r\n            <li key={key}>\r\n                <span>\r\n                    <span>{count}</span>\r\n                    шт. {burger.name}\r\n                    <span>\r\n                        {count * burger.price}\r\n                        ₸</span>\r\n                    <button onClick={() => this.props.deleteFromOrder(key)} className='cancelItem'>&times;</button>\r\n                </span>\r\n            </li>\r\n        </CSSTransition>\r\n    };\r\n\r\n    render() {\r\n        const orderIds = Object.keys(this.props.order)\r\n        const total = orderIds.reduce((prevTotal, key) => {\r\n            const burger = this.props.burgers[key];\r\n            const count = this.props.order[key];\r\n\r\n            const isAvailable = burger && burger.status === 'available';\r\n            if (isAvailable) {\r\n                return prevTotal + burger.price * count;\r\n            }\r\n            return prevTotal;\r\n        }, 0);\r\n\r\n        return (\r\n            <div className=\"order-wrap\">\r\n                <h2>Ваш Заказ</h2>\r\n\r\n                <TransitionGroup component='ul' className='order'>\r\n                    {orderIds.map(this.renderOrder)}\r\n                </TransitionGroup>\r\n\r\n                {total > 0\r\n                    ? (<Shipment total={total}/>)\r\n                    : (\r\n                        <div className=\"nothingSelected\">\r\n                            Выберите блюда и добавьте к заказу\r\n                        </div>\r\n                    )}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Order;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Burger extends React.Component {\r\n\r\n    static propTypes = {\r\n        details: PropTypes.shape({image: PropTypes.string, name: PropTypes.string, price: PropTypes.number, desc: PropTypes.string, status: PropTypes.string}),\r\n        index: PropTypes.string,\r\n        addToOrder: PropTypes.func\r\n    }\r\n\r\n    render() {\r\n        // const image = this.props.details.image; const name = this.props.details.name;\r\n        const {image, name, price, desc, status} = this.props.details;\r\n        const isAvailable = status === 'available';\r\n\r\n        return (\r\n            <li className='menu-burger'>\r\n                <div className=\"image-container\">\r\n                    <img src={image} alt={name}/>\r\n                </div>\r\n\r\n                <div className=\"burger-details\">\r\n                    <h3 className=\"burger-name\">{name}\r\n                        <span className=\"price\">{price}\r\n                            ₸</span>\r\n                    </h3>\r\n                    <p>{desc}</p>\r\n                    <button\r\n                        className=\"buttonOrder\"\r\n                        disabled\r\n                        ={!isAvailable}\r\n                        onClick={() => {\r\n                        this\r\n                            .props\r\n                            .addToOrder(this.props.index);\r\n                    }}>\r\n                        {isAvailable\r\n                            ? 'Заказать'\r\n                            : 'Временно нет'}\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Burger;","// Наше меню\r\nconst sampleBurgers = {\r\n  burger1: {\r\n    name: 'Чизбургер',\r\n    image: '/images/cheese.jpg',\r\n    desc:\r\n      'Классический бургер с бифштексом из 100% говядины с маринованными огурчиками и свежей пшеничной булочкой.',\r\n    price: 110,\r\n    status: 'available'\r\n  },\r\n\r\n  burger2: {\r\n    name: 'Чикенбургер',\r\n    image: '/images/chicken.jpg',\r\n    desc:\r\n      'Куриный бургер с добавлением расплавленного сыра, соуса Барбекю и листового салата.',\r\n    price: 140,\r\n    status: 'available'\r\n  },\r\n\r\n  burger3: {\r\n    name: 'Двойной Гамбургер',\r\n    image: '/images/double.jpg',\r\n    desc:\r\n      'Двойной гамбургер с бифштексом из 100% говядины и расплавленным сыром Чеддер и пряным соусом.',\r\n    price: 200,\r\n    status: 'unavailable'\r\n  },\r\n\r\n  burger4: {\r\n    name: 'Фишбургер',\r\n    image: '/images/fish.jpg',\r\n    desc:\r\n      'Рыбное филе высшего качества c листовым салатом, маринованными огурчиками и преправленное легким майонезом.',\r\n    price: 150,\r\n    status: 'available'\r\n  },\r\n\r\n  burger5: {\r\n    name: 'Картофель Фри',\r\n    image: '/images/fries.jpg',\r\n    desc:\r\n      'Хрустящие ломтики золотистого горячего картофеля Супер Фри, сделанные из отборного органического корнеплода!',\r\n    price: 85,\r\n    status: 'available'\r\n  },\r\n\r\n  burger6: {\r\n    name: 'King Бургер',\r\n    image: '/images/ham.jpg',\r\n    desc:\r\n      'Бургер из 100% отборной говядины, с жаренными ломтиками бекона и свежим расплавленным сыром, заправленный кетчупом и майонезом.',\r\n    price: 450,\r\n    status: 'available'\r\n  },\r\n\r\n  burger7: {\r\n    name: 'Мега Бургер',\r\n    image: '/images/mega.jpg',\r\n    desc:\r\n      'Наш самый большой бургер, сделанный из свежайшего бифштекса, с добавлением расплавленного сыра Чеддер и соленых огурчиков.',\r\n    price: 500,\r\n    status: 'available'\r\n  },\r\n\r\n  burger8: {\r\n    name: 'Бургер в Пите',\r\n    image: '/images/pita.jpg',\r\n    desc:\r\n      'Четыре котлеты из 100% говядины, покрытые плавленным сыром Чеддер, со свежим листовым салатом в свежей пшеничной лепешке.',\r\n    price: 380,\r\n    status: 'available'\r\n  },\r\n\r\n  burger9: {\r\n    name: 'Village Фри',\r\n    image: '/images/bakedFries.jpg',\r\n    desc:\r\n      'Порция свежих ломтиков картофеля, запеченых на открытом воздухе под мирно тлеющими углями',\r\n    price: 90,\r\n    status: 'available'\r\n  }\r\n};\r\n\r\nexport default sampleBurgers;\r\n","import Rebase from 're-base';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseApp = firebase.initializeApp({apiKey: \"AIzaSyDRsqF_4c7eeiPQsSa7XqgubNQxv4BwpME\", authDomain: \"very-hot-burgers-261e5.firebaseapp.com\", databaseURL: \"https://very-hot-burgers-261e5-default-rtdb.firebaseio.com\"});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\nexport {firebaseApp};\r\n\r\nexport default base;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = (props) => {\r\n    return (\r\n        <div className='login-container'>\r\n            <nav className=\"login\">\r\n                <h2>Авторизация</h2>\r\n                <p>Введите логин и пароль вашего аккаунта Github</p>\r\n                <button className=\"github\"\r\n                onClick={() => props.authenticate()}\r\n                >Войти</button>\r\n            </nav>\r\n        </div>\r\n    )\r\n};\r\n\r\nLogin.propTypes ={\r\n    authenticate: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport Login from './Login';\r\nimport firebase from 'firebase/app';\r\nimport {firebaseApp} from '../../base';\r\n\r\nclass SignIn extends React.Component {\r\n    state = {\r\n        user: ''\r\n    };\r\n\r\n    authHandler = async(authData) => {\r\n        const {email} = authData.user;\r\n        this.setState({user: email});\r\n    };\r\n\r\n    authenticate = () => {\r\n        const authProvider = new firebase.auth['GithubAuthProvider']();\r\n        firebaseApp\r\n            .auth()\r\n            .signInWithPopup(authProvider)\r\n            .then(this.authHandler)\r\n    };\r\n\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Login authenticate={this.authenticate}/>;\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Header from './Header';\r\nimport MenuAdmin from './MenuAdmin';\r\nimport Order from './Order';\r\nimport Burger from './Burger';\r\nimport sampleBurgers from '../sample-burgers';\r\nimport base from \"../base\";\r\nimport SignIn from './Auth/SignIn';\r\n\r\nclass App extends React.Component {\r\n    static propTypes = {\r\n        match: PropTypes.object\r\n    }\r\n\r\n    state = {\r\n        burgers: {},\r\n        order: {}\r\n    };\r\n\r\n    componentDidMount() {\r\n        const {params} = this.props.match;\r\n\r\n        const localStorageRef = localStorage.getItem(params.restaurantId);\r\n        if (localStorageRef) {\r\n            this.setState({\r\n                order: JSON.parse(localStorageRef)\r\n            })\r\n        }\r\n\r\n        this.ref = base.syncState(`${params.restaurantId}/burgers`, {\r\n            context: this,\r\n            state: 'burgers'\r\n        });\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        const {params} = this.props.match;\r\n        localStorage.setItem(params.restaurantId, JSON.stringify(this.state.order));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        base.removeBinding(this.ref);\r\n    };\r\n\r\n    addBurger = (burger) => {\r\n        // 1. Делаем копию обьекта state\r\n        const burgers = {\r\n            ...this.state.burgers\r\n        };\r\n        // 2. Добавить новый бургерв переменную burgers\r\n        burgers[`burger${Date.now()}`] = burger;\r\n        // 3. Записать наш новый обьект burgers в state\r\n        this.setState({burger: burgers});\r\n    };\r\n\r\n    updateBurger = (key, updatedBurger) => {\r\n        // 1. Делаем копию обьекта state\r\n        const burgers = {\r\n            ...this.state.burgers\r\n        };\r\n        // 2. Обновляем нужный burger\r\n        burgers[key] = updatedBurger;\r\n        // 3. Записать наш новый обьект burgers в state\r\n        this.setState({burgers});\r\n    }\r\n\r\n    deleteBurger = (key) => {\r\n        // 1. Делаем копию обьекта state\r\n        const burgers = {\r\n            ...this.state.burgers\r\n        };\r\n        // 2. Удаляем burger\r\n        burgers[key] = null;\r\n        // 3. Записать наш новый обьект burgers в state\r\n        this.setState({burgers});\r\n    }\r\n\r\n    loadSampleBurgers = () => {\r\n        this.setState({burgers: sampleBurgers})\r\n    };\r\n\r\n    addToOrder = (key) => {\r\n        // 1. Делаем копию обьекта state\r\n        const order = {\r\n            ...this.state.order\r\n        };\r\n        // 2. Добаить ключ к заказу со значением 1, либо обновить текущ. значение\r\n        order[key] = order[key] + 1 || 1;\r\n        // 3. Записать наш новый обьект order в state\r\n        this.setState({order: order});\r\n    };\r\n\r\n    deleteFromOrder = (key) => {\r\n        // 1. Делаем копию обьекта state\r\n        const order = {\r\n            ...this.state.order\r\n        };\r\n        // 2. Удаляем burger\r\n        delete order[key];\r\n        // 3. Записать наш новый обьект order в state\r\n        this.setState({order});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <SignIn>\r\n                <div className=\"burger-paradise\">\r\n                    <div className=\"menu\">\r\n                        <Header title='Hot Burgers'/>\r\n                        <ul className=\"burgers\">\r\n                            {Object\r\n                                .keys(this.state.burgers)\r\n                                .map(key => {\r\n                                    return <Burger\r\n                                        key={key}\r\n                                        index={key}\r\n                                        details={this.state.burgers[key]}\r\n                                        addToOrder={this.addToOrder}/>\r\n                                })}\r\n                        </ul>\r\n                    </div>\r\n                    <Order\r\n                        deleteFromOrder={this.deleteFromOrder}\r\n                        burgers={this.state.burgers}\r\n                        order={this.state.order}/>\r\n                    <MenuAdmin\r\n                        addBurger={this.addBurger}\r\n                        loadSampleBurgers={this.loadSampleBurgers}\r\n                        burgers={this.state.burgers}\r\n                        updateBurger={this.updateBurger}\r\n                        deleteBurger={this.deleteBurger}/>\r\n                </div>\r\n            </SignIn>\r\n        )\r\n    }\r\n};\r\n\r\nexport default App;","import React from 'react';\r\n\r\nconst NotFound =() =>{\r\n    return(\r\n        <div>\r\n            <h2>The Page Is Not Found</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport Landing from './Landing';\r\nimport App from './App';\r\nimport NotFound from './NotFound';\r\n\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\n\r\nconst Router = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path='/' component={Landing}/>\r\n                <Route path='/restaurant/:restaurantId' component={App}/>\r\n                <Route component={NotFound}/>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\nexport default Router;","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport Router from './components/Router';\r\nimport './css/style.css';\r\n\r\nrender(<Router/>, document.querySelector('#root'));"],"sourceRoot":""}